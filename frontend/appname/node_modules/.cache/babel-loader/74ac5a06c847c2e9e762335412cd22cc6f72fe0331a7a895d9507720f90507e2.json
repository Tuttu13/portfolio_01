{"ast":null,"code":"var _jsxFileName = \"/usr/frontend/appname/src/components/TaskList.tsx\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  setTasks\n}) => {\n  const handleDone = task => {\n    setTasks(prev => prev.map(t => t.id === task.id ? {\n      ...task,\n      done: !task.done\n    } : t));\n  };\n  const handleDelete = task => {\n    setTasks(prev => prev.filter(t => t.id !== task.id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inner\",\n    children: tasks.length <= 0 ? '登録されたTODOはありません。' : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        handleDelete: handleDelete,\n        handleDone: handleDone\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskItem","jsxDEV","_jsxDEV","TaskList","tasks","setTasks","handleDone","task","prev","map","t","id","done","handleDelete","filter","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/usr/frontend/appname/src/components/TaskList.tsx"],"sourcesContent":["import React from 'react'\r\nimport TaskItem from './TaskItem'\r\nimport { Task } from './Types'\r\n \r\ntype Props = {\r\n    tasks: Task[]\r\n    setTasks: React.Dispatch<React.SetStateAction<Task[]>>\r\n}\r\n \r\nconst TaskList: React.FC<Props> = ({ tasks, setTasks }) => {\r\n \r\n    const handleDone = (task: Task) => {\r\n        setTasks(prev => prev.map(t =>\r\n            t.id === task.id\r\n                ? { ...task, done: !task.done }\r\n                : t\r\n        ))\r\n    }\r\n \r\n    const handleDelete = (task: Task) => {\r\n        setTasks(prev => prev.filter(t =>\r\n            t.id !== task.id\r\n        ))\r\n    }\r\n \r\n    return (\r\n        <div className=\"inner\">\r\n        {\r\n            tasks.length <= 0 ? '登録されたTODOはありません。' :\r\n            <ul className=\"task-list\">\r\n            { tasks.map( task => (\r\n                <TaskItem\r\n                    key={task.id}\r\n                    task={task}\r\n                    handleDelete={handleDelete}\r\n                    handleDone={handleDone}\r\n                />\r\n            )) }\r\n            </ul>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default TaskList"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQjC,MAAMC,QAAyB,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAEvD,MAAMC,UAAU,GAAIC,IAAU,IAAK;IAC/BF,QAAQ,CAACG,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACC,CAAC,IACvBA,CAAC,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE,GACV;MAAE,GAAGJ,IAAI;MAAEK,IAAI,EAAE,CAACL,IAAI,CAACK;IAAK,CAAC,GAC7BF,CACV,CAAC,CAAC;EACN,CAAC;EAED,MAAMG,YAAY,GAAIN,IAAU,IAAK;IACjCF,QAAQ,CAACG,IAAI,IAAIA,IAAI,CAACM,MAAM,CAACJ,CAAC,IAC1BA,CAAC,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAClB,CAAC,CAAC;EACN,CAAC;EAED,oBACIT,OAAA;IAAKa,SAAS,EAAC,OAAO;IAAAC,QAAA,EAElBZ,KAAK,CAACa,MAAM,IAAI,CAAC,GAAG,kBAAkB,gBACtCf,OAAA;MAAIa,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBZ,KAAK,CAACK,GAAG,CAAEF,IAAI,iBACbL,OAAA,CAACF,QAAQ;QAELO,IAAI,EAAEA,IAAK;QACXM,YAAY,EAAEA,YAAa;QAC3BP,UAAU,EAAEA;MAAW,GAHlBC,IAAI,CAACI,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEd,CAAC;AAAAC,EAAA,GAjCKnB,QAAyB;AAmC/B,eAAeA,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}