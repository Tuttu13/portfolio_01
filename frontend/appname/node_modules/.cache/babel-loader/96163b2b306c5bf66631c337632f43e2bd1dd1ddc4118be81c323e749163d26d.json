{"ast":null,"code":"var _jsxFileName = \"/usr/frontend/appname/src/components/ProductionList.tsx\";\nimport React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport MediaList from \"./MediaCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductionList = () => {\n  const setMediaList = [{\n    'title': 'タイトル1',\n    'description': \"タイトル1の説明が入ります。\",\n    'image': \"/images/production/production-001.png\"\n  }, {\n    'title': 'タイトル2',\n    'description': \"タイトル3の説明が入ります。\",\n    'image': \"/images/production/production-002.png\"\n  }, {\n    'title': 'タイトル3',\n    'description': \"タイトル3の説明が入ります。\",\n    'image': \"/images/production/production-003.png\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      rowSpacing: 2,\n      columnSpacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        sx: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h2\",\n          variant: \"h2\",\n          children: \"Production\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), setMediaList.map(data => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(MediaList, {\n              title: data.title,\n              description: data.description,\n              image: data.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        sx: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"large\",\n          children: \"LearnMore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = ProductionList;\nexport default ProductionList;\nvar _c;\n$RefreshReg$(_c, \"ProductionList\");","map":{"version":3,"names":["React","Box","Grid","Typography","Button","MediaList","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductionList","setMediaList","children","container","rowSpacing","columnSpacing","item","xs","md","sx","textAlign","component","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","data","width","title","description","image","size","_c","$RefreshReg$"],"sources":["/usr/frontend/appname/src/components/ProductionList.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport MediaList from \"./MediaCard\";\r\n\r\nconst ProductionList: React.FC = () => {\r\n    const setMediaList = [\r\n        {\r\n            'title': 'タイトル1',\r\n            'description': \"タイトル1の説明が入ります。\",\r\n            'image': \"/images/production/production-001.png\",\r\n        },\r\n        {\r\n            'title': 'タイトル2',\r\n            'description': \"タイトル3の説明が入ります。\",\r\n            'image': \"/images/production/production-002.png\",\r\n        },\r\n        {\r\n            'title': 'タイトル3',\r\n            'description': \"タイトル3の説明が入ります。\",\r\n            'image': \"/images/production/production-003.png\",\r\n        }\r\n    ];\r\n\r\n    return(\r\n        <>\r\n            <Grid container rowSpacing={2} columnSpacing={2}>\r\n                <Grid item xs={12} md={12} sx={{ textAlign: 'center' }}>\r\n                    <Typography component=\"h2\" variant=\"h2\">\r\n                        Production\r\n                    </Typography>\r\n                </Grid>\r\n                {setMediaList.map((data) => {\r\n                    return (\r\n                        <Grid item xs={12} md={4}>\r\n                            <Box sx={{ width: \"100%\" }}>\r\n                                <MediaList title={data.title} description={data.description} image={data.image} />\r\n                            </Box>\r\n                        </Grid>\r\n                    );\r\n                })}\r\n                <Grid item xs={12} md={12} sx={{ textAlign: 'center' }}>\r\n                    <Button variant=\"contained\" size=\"large\">\r\n                        LearnMore\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductionList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EACnC,MAAMC,YAAY,GAAG,CACjB;IACI,OAAO,EAAE,OAAO;IAChB,aAAa,EAAE,gBAAgB;IAC/B,OAAO,EAAE;EACb,CAAC,EACD;IACI,OAAO,EAAE,OAAO;IAChB,aAAa,EAAE,gBAAgB;IAC/B,OAAO,EAAE;EACb,CAAC,EACD;IACI,OAAO,EAAE,OAAO;IAChB,aAAa,EAAE,gBAAgB;IAC/B,OAAO,EAAE;EACb,CAAC,CACJ;EAED,oBACIJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACIL,OAAA,CAACL,IAAI;MAACW,SAAS;MAACC,UAAU,EAAE,CAAE;MAACC,aAAa,EAAE,CAAE;MAAAH,QAAA,gBAC5CL,OAAA,CAACL,IAAI;QAACc,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAR,QAAA,eACnDL,OAAA,CAACJ,UAAU;UAACkB,SAAS,EAAC,IAAI;UAACC,OAAO,EAAC,IAAI;UAAAV,QAAA,EAAC;QAExC;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,EACNf,YAAY,CAACgB,GAAG,CAAEC,IAAI,IAAK;QACxB,oBACIrB,OAAA,CAACL,IAAI;UAACc,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAN,QAAA,eACrBL,OAAA,CAACN,GAAG;YAACkB,EAAE,EAAE;cAAEU,KAAK,EAAE;YAAO,CAAE;YAAAjB,QAAA,eACvBL,OAAA,CAACF,SAAS;cAACyB,KAAK,EAAEF,IAAI,CAACE,KAAM;cAACC,WAAW,EAAEH,IAAI,CAACG,WAAY;cAACC,KAAK,EAAEJ,IAAI,CAACI;YAAM;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAEf,CAAC,CAAC,eACFnB,OAAA,CAACL,IAAI;QAACc,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAR,QAAA,eACnDL,OAAA,CAACH,MAAM;UAACkB,OAAO,EAAC,WAAW;UAACW,IAAI,EAAC,OAAO;UAAArB,QAAA,EAAC;QAEzC;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACT,CAAC;AAEX,CAAC;AAACQ,EAAA,GA5CIxB,cAAwB;AA8C9B,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}